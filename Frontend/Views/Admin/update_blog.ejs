<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Update Blog | Beyond Man</title>
    <meta name="description" content="Update your existing blog post">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <!-- Quill CSS -->
    <link href="https://cdn.quilljs.com/1.3.7/quill.snow.css" rel="stylesheet">

    <!-- Highlight.js -->
    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/atom-one-dark.min.css">

    <!-- KaTeX -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css">

    <!-- Cropper.js -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">

    <!-- Main Styles -->
    <link rel="stylesheet" href="/Style/Admin/updateBlog.css">
</head>

<body>
    <div class="admin-container">
        <header class="admin-header">
            <h1>Update Blog Post</h1>
            <nav class="admin-nav">
                <a href="/admin/read" class="btn btn-outline">
                    <i class="fas fa-arrow-left"></i> Back to Blogs
                </a>
            </nav>
        </header>

        <main class="blog-update-container">
            <form id="blogForm" class="blog-form" action="/admin/<%=blog._id%>?_method=PUT" method="post"
                enctype="multipart/form-data">
                <div class="form-section">
                    <h2 class="section-title">Basic Information</h2>

                    <div class="form-group">
                        <label for="languageName" class="required">Language Name</label>
                        <input type="text" id="languageName" name="languageName" placeholder="e.g., JavaScript, Python"
                            value="<%= blog.languageName %>" required>
                    </div>

                    <div class="form-group">
                        <label for="title" class="required">Blog Title</label>
                        <input type="text" id="title" name="title" placeholder="Enter blog title"
                            value="<%= blog.title %>" maxlength="250" required>
                        <div class="char-counter" id="charTitleCount">
                            <%= blog.title.length || 0 %>/250 characters
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="description" class="required">Short Description</label>
                        <textarea id="description" name="description"
                            placeholder="Brief description for preview cards..." maxlength="120"
                            required><%= blog.description %></textarea>
                        <div class="char-counter" id="charDescriptionCount">
                            <%= blog.description.length || 0 %>/120 characters
                        </div>
                    </div>
                </div>

                <div class="form-section">
                    <h2 class="section-title">Blog Content</h2>
                    <div class="editor-container">
                        <div id="toolbar-container">
                            <span class="ql-formats">
                                <select class="ql-font"></select>
                                <select class="ql-size"></select>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-bold"></button>
                                <button class="ql-italic"></button>
                                <button class="ql-underline"></button>
                                <button class="ql-strike"></button>
                            </span>
                            <span class="ql-formats">
                                <select class="ql-color"></select>
                                <select class="ql-background"></select>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-script" value="sub"></button>
                                <button class="ql-script" value="super"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-header" value="1"></button>
                                <button class="ql-header" value="2"></button>
                                <button class="ql-header" value="3"></button>
                                <button class="ql-blockquote"></button>
                                <button class="ql-code-block"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-list" value="ordered"></button>
                                <button class="ql-list" value="bullet"></button>
                                <button class="ql-indent" value="-1"></button>
                                <button class="ql-indent" value="+1"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-direction" value="rtl"></button>
                                <select class="ql-align"></select>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-link"></button>
                                <button class="ql-image"></button>
                                <button class="ql-video"></button>
                                <button class="ql-formula"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-clean"></button>
                            </span>
                        </div>
                        <div id="editor"></div>
                        <!-- Change this line in your EJS template -->
                        <input type="hidden" id="content" name="content">
                    </div>
                </div>

                <div class="form-section">
                    <h2 class="section-title">Additional Information</h2>

                    <div class="form-group">
                        <label for="author">Author Name</label>
                        <input type="text" id="author" name="author" placeholder="Your name or pseudonym"
                            value="<%= blog.author %>" maxlength="40">
                        <div class="char-counter" id="charAuthorCount">
                            <%= blog.author ? blog.author.length : 0 %>/40 characters
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="category" class="required">Category</label>
                        <select id="category" name="category" required>
                            <option value="<%= blog.category %>">
                                <%= blog.category %>
                            </option>
                            <option value="Programming">Programming</option>
                            <option value="Web-Development">Web Development</option>
                            <option value="Android-Development">Android Development</option>
                            <option value="AI-ML">AI and ML</option>
                            <option value="Software-Development">Software Development</option>
                            <option value="Technology">Technology</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="tags">Tags</label>
                        <input type="text" id="tags" name="tags"
                            placeholder="Comma-separated tags (e.g., JavaScript, Web)" value="<%= blog.tags %>">
                        <div class="hint">Separate tags with commas</div>
                    </div>
                </div>

                <div class="form-section">
                    <h2 class="section-title">Featured Image</h2>

                    <div class="image-upload-container">
                        <div class="current-image">
                            <h4>Current Image</h4>
                            <% if (blog.image.url) { %>
                                <img src="<%= blog.image.url %>" alt="Current blog image" class="current-image-preview">
                                <% } else { %>
                                    <div class="no-image">
                                        <i class="fas fa-image"></i>
                                        <p>No image currently set</p>
                                    </div>
                                    <% } %>
                        </div>

                        <div class="upload-new">
                            <h4>Update Image (Optional)</h4>
                            <div class="upload-guidelines">
                                <ul>
                                    <li><i class="fas fa-check-circle"></i> Recommended: 1066 × 613 pixels</li>
                                    <li><i class="fas fa-check-circle"></i> Acceptable Range: 1050–1080 × 600-620 pixels
                                    </li>
                                    <li><i class="fas fa-check-circle"></i> Formats: PNG, JPG, JPEG</li>
                                    <li><i class="fas fa-check-circle"></i> File Size: 100KB - 500KB (Max: 1MB)</li>
                                </ul>
                            </div>
                            <label for="image-url" class="btn btn-outline">
                                <i class="fas fa-upload"></i> Select New Image
                                <input type="file" id="image-url" name="image"
                                    accept="image/png, image/jpeg, image/jpg">
                            </label>
                        </div>
                    </div>
                </div>

                <div class="form-actions">
                    <button type="button" class="btn btn-outline" id="previewBtn">
                        <i class="fas fa-eye"></i> Preview Changes
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Update Blog
                    </button>
                </div>
            </form>
        </main>
    </div>

    <!-- Cropper Modal -->
    <div id="cropperModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Crop Image</h3>
                <button class="close-modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="image-container">
                    <img id="cropperImage" src="">
                </div>
                <div class="alignment-controls">
                    <button class="btn btn-outline align-btn" data-align="left">
                        <i class="fas fa-align-left"></i> Left
                    </button>
                    <button class="btn btn-outline align-btn" data-align="center">
                        <i class="fas fa-align-center"></i> Center
                    </button>
                    <button class="btn btn-outline align-btn" data-align="right">
                        <i class="fas fa-align-right"></i> Right
                    </button>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-outline" id="cancelCrop">Cancel</button>
                <button class="btn btn-primary" id="insertImage">Insert Image</button>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.js"></script>
    <script src="https://cdn.quilljs.com/1.3.7/quill.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/quill-image-resize-module@3.0.0/image-resize.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Initialize Quill Editor
            const initializeEditor = () => {
                // Register modules
                if (typeof Quill !== "undefined" && typeof ImageResize !== "undefined") {
                    Quill.register("modules/imageResize", ImageResize.default || ImageResize);

                    // Create the editor
                    window.quill = new Quill("#editor", {
                        modules: {
                            syntax: {
                                highlight: (text) => hljs.highlightAuto(text).value,
                            },
                            toolbar: {
                                container: "#toolbar-container",
                                handlers: {
                                    image: handleImageUpload,
                                },
                            },
                            imageResize: {
                                displaySize: true,
                                modules: ["Resize", "DisplaySize"],
                            },
                        },
                        placeholder: "Write your blog content here...",
                        theme: "snow",
                    });



                    const contentInput = document.getElementById("content");

                    const existingContent = `<%- blog.content %>`;
                    const savedDraft = localStorage.getItem("draft-content");

                    // ✅ Use savedDraft if available (prioritize user's last typed version)
                    if (savedDraft && savedDraft.trim() !== "") {
                        quill.root.innerHTML = savedDraft;
                        contentInput.value = savedDraft;
                    } else if (existingContent && existingContent.trim() !== "") {
                        quill.root.innerHTML = existingContent;
                        contentInput.value = existingContent;
                    }

                    // Update input and save to localStorage on typing
                    quill.on("text-change", () => {
                        const html = quill.root.innerHTML;
                        contentInput.value = html;
                        localStorage.setItem("draft-content", html);
                    });
                } else {
                    console.error("Required libraries not loaded");
                }

            };


            // Handle image uploads
            const handleImageUpload = () => {
                const input = document.createElement("input");
                input.setAttribute("type", "file");
                input.setAttribute("accept", "image/*");
                input.click();

                input.onchange = () => {
                    const file = input.files[0];
                    if (!file) return;

                    if (!file.type.match("image.*")) {
                        alert("Please select an image file");
                        return;
                    }

                    const reader = new FileReader();
                    reader.onload = (e) => {
                        openImageCropper(e.target.result);
                    };
                    reader.readAsDataURL(file);
                };
            };

            // Open image cropper modal
            const openImageCropper = (imageSrc) => {
                const modal = document.getElementById("cropperModal");
                const cropperImage = document.getElementById("cropperImage");

                cropperImage.src = imageSrc;
                modal.classList.add("active");
                document.body.style.overflow = "hidden";

                // Initialize cropper
                const cropper = new Cropper(cropperImage, {
                    aspectRatio: 16 / 9,
                    viewMode: 1,
                    autoCropArea: 0.8,
                    responsive: true,
                    guides: true,
                });

                let alignment = "align-left";

                // Set up alignment buttons
                document.querySelectorAll(".align-btn").forEach((btn) => {
                    btn.addEventListener("click", () => {
                        alignment = `align-${btn.dataset.align}`;

                        // Update active state
                        document.querySelectorAll(".align-btn").forEach((b) => {
                            b.classList.remove("active");
                        });
                        btn.classList.add("active");
                    });
                });

                // Cancel button
                document.getElementById("cancelCrop").addEventListener("click", () => {
                    cropper.destroy();
                    modal.classList.remove("active");
                    document.body.style.overflow = "";
                });

                // Insert button
                document.getElementById("insertImage").addEventListener("click", () => {
                    const canvas = cropper.getCroppedCanvas();
                    if (canvas) {
                        const range = quill.getSelection();
                        quill.clipboard.dangerouslyPasteHTML(
                            range.index,
                            `<img src="${canvas.toDataURL(
                                "image/jpeg",
                                0.9
                            )}" class="${alignment}" />`
                        );
                    }

                    cropper.destroy();
                    modal.classList.remove("active");
                    document.body.style.overflow = "";
                });
            };

            // Character counters
            const setupCharacterCounters = () => {
                const updateCounter = (inputId, counterId, maxLength) => {
                    const input = document.getElementById(inputId);
                    const counter = document.getElementById(counterId);

                    input.addEventListener("input", () => {
                        const length = input.value.length;
                        counter.textContent = `${length}/${maxLength} characters`;

                        if (length > maxLength * 0.9) {
                            counter.style.color = "var(--danger-color)";
                        } else {
                            counter.style.color = "var(--gray-color)";
                        }
                    });
                };

                updateCounter("title", "charTitleCount", 250);
                updateCounter("description", "charDescriptionCount", 120);
                updateCounter("author", "charAuthorCount", 40);
            };

            // Form validation
            const setupFormValidation = () => {
                const form = document.getElementById("blogForm");

                form.addEventListener("submit", (e) => {
                    const content = document.getElementById("content").value;
                    const image = document.getElementById("image-url").files[0];

                    if (!content || content.trim().length < 50) {
                        e.preventDefault();
                        alert(
                            "Please provide meaningful blog content (at least 50 characters)"
                        );
                        return;
                    }


                    // Clear localStorage only if form is actually valid and submitting
                    localStorage.removeItem("draft-content");
                });
            };

            // Preview functionality
            const setupPreview = () => {
                document.getElementById("previewBtn").addEventListener("click", () => {
                    // In a real implementation, this would open a preview window
                    // or show a preview modal with the formatted content
                    alert("Preview functionality would show your formatted blog here");
                });
            };

            // Initialize all components
            initializeEditor();
            setupCharacterCounters();
            setupFormValidation();
            setupPreview();
        });

    </script>
</body>

</html>